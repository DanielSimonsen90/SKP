export default class DOMTokenArray extends Array<string> implements DOMTokenList {
    public value: string;
    public toString() {
        return this.value;
    }
    
    public contains(token: string): boolean {
        return this.includes(token);
    }
    public item(index: number): string {
       return this[index];
    }
    public replace(token: string, newToken: string): boolean {
        const i = this.findIndex(t => t == token);
        this[i] = newToken;
        return true;
    }
    public supports(token: string): boolean {
        return this.contains(token);
    }
    public toggle(token: string, force?: boolean): boolean {
        const hasTokenFn = () => this.some(t => t === token);
        const hasToken = hasTokenFn();

        if (force === true && !hasToken) this.add(token);
        else if (force === false && hasToken) this.remove(token);
        else if (force === undefined || force === null) {
            hasToken && this.remove(token) || this.add(token);
        }
        return hasTokenFn();
    }
    public forEach(callback: (value: string, index: number, self: this) => void) {
        for (let i = 0; i < this.length; i++) {
            callback(this[i], i, this);
        }
    }
}